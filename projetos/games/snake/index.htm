<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <link rel="stylesheet" href="style.css">
</head>

<body>
    <h1>Snake Game</h1>
	<div id="top">
		<b id="score">Pontuação: 0</b>
		<b id="level">Nível: 1</b>
		<button id="reset">Reiniciar</button>
	</div>
	<canvas id="board"></canvas>

    <script>
 let blockSize = 25;
let total_row = 20; //total row number
let total_col = 20; //total column number
let board;
let context;

let snakeX = blockSize * 5;
let snakeY = blockSize * 5;

// Set the total number of rows and columns
let speedX = 0; //speed of snake in x coordinate.
let speedY = 0; //speed of snake in Y coordinate.

let snakeBody = [];

let foodX;
let foodY;
let foodImage;

let gameOver = false;
let score = 0;
let level = 1;
let interval = 150; // Velocidade inicial
let intervalId;

window.onload = function () {
    // Set board height and width
    board = document.getElementById("board");
    board.height = total_row * blockSize;
    board.width = total_col * blockSize;
    context = board.getContext("2d");

    // Load food image
    foodImage = new Image();
    foodImage.onload = function() {
        placeFood();
        document.addEventListener("keyup", changeDirection); //for movements
        // Set snake speed
        intervalId = setInterval(update, interval); // Define o intervalo de acordo com a velocidade

        // Adiciona evento de clique ao botão de reiniciar
        document.getElementById("reset").addEventListener("click", resetGame);
    };
    foodImage.src = "food.png";
}

function update() {
    if (gameOver) {
        return;
    }

    // Background of a Game
    context.fillStyle = "green";
    context.fillRect(0, 0, board.width, board.height);

    // Set food color and position
    context.drawImage(foodImage, foodX, foodY, blockSize, blockSize);

    if (snakeX == foodX && snakeY == foodY) {
        snakeBody.push([foodX, foodY]);
        placeFood();
        score++; // Aumenta a pontuação quando a cobra come um alimento
        document.getElementById("score").textContent = "Pontuação: " + score;

        // Verifica se o jogador atingiu um novo nível
        if (score % 10 == 0) {
            level++;
            document.getElementById("level").textContent = "Nível: " + level;
            updateSpeed(); // Atualiza a velocidade de acordo com o novo nível
        }
    }

    // body of snake will grow
    for (let i = snakeBody.length - 1; i > 0; i--) {
        // it will store previous part of snake to the current part
        snakeBody[i] = snakeBody[i - 1];
    }
    if (snakeBody.length) {
        snakeBody[0] = [snakeX, snakeY];
    }

    context.fillStyle = "white";
    snakeX += speedX * blockSize; //updating Snake position in X coordinate.
    snakeY += speedY * blockSize; //updating Snake position in Y coordinate.
    context.fillRect(snakeX, snakeY, blockSize, blockSize);
    for (let i = 0; i < snakeBody.length; i++) {
        context.fillRect(snakeBody[i][0], snakeBody[i][1], blockSize, blockSize);
    }

    if (snakeX < 0 ||
        snakeX > total_col * blockSize ||
        snakeY < 0 ||
        snakeY > total_row * blockSize) {

        // Out of bound condition
        gameOver = true;
        alert("Game Over");
    }

    for (let i = 0; i < snakeBody.length; i++) {
        if (snakeX == snakeBody[i][0] && snakeY == snakeBody[i][1]) {

            // Snake eats own body
            gameOver = true;
            alert("Game Over");
        }
    }
}

// Atualiza a velocidade de acordo com o nível atual
function updateSpeed() {
    // Aumenta a velocidade a cada novo nível
    interval -= 5; // Diminui o intervalo em 20ms
    clearInterval(intervalId); // Limpa o intervalo atual
    intervalId = setInterval(update, interval); // Define o novo intervalo
}


// Movement of the Snake - We are using addEventListener
function changeDirection(e) {
    if ((e.code == "ArrowUp" || e.key == "w") && speedY != 1) {
        // If up arrow key or W key pressed with this condition...
        // snake will not move in the opposite direction
        speedX = 0;
        speedY = -1;
    }
    else if ((e.code == "ArrowDown" || e.key == "s") && speedY != -1) {
        // If down arrow key or S key pressed
        speedX = 0;
        speedY = 1;
    }
    else if ((e.code == "ArrowLeft" || e.key == "a") && speedX != 1) {
        // If left arrow key or A key pressed
        speedX = -1;
        speedY = 0;
    }
    else if ((e.code == "ArrowRight" || e.key == "d") && speedX != -1) {
        // If right arrow key or D key pressed
        speedX = 1;
        speedY = 0;
    }
    else if (e.code == "Space") {
        // If space key pressed, reset the game
        resetGame();
    }
}


// Randomly place food
function placeFood() {

    // in x coordinates.
    foodX = Math.floor(Math.random() * total_col) * blockSize;

    //in y coordinates.
    foodY = Math.floor(Math.random() * total_row) * blockSize;
}


// Função para reiniciar o jogo
function resetGame() {
    snakeX = blockSize * 5;
    snakeY = blockSize * 5;
    speedX = 0;
    speedY = 0;
    snakeBody = [];
    score = 0;
    level = 1;
    gameOver = false;
    document.getElementById("score").textContent = "Pontuação: " + score;
    document.getElementById("level").textContent = "Nível: " + level;
}

   </script>
</body>

</html>
